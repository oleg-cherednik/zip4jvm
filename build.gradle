import com.github.jk1.license.filter.LicenseBundleNormalizer
import com.github.jk1.license.render.InventoryHtmlReportRenderer

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

plugins {
    id 'jacoco'
    id 'java-library'
    id 'io.freefair.lombok' version '8.4'

    id 'org.cadixdev.licenser' version '0.6.1'
    id 'com.github.jk1.dependency-license-report' version '2.5'
    id 'com.github.ben-manes.versions' version '0.51.0'

    id 'signing'
    id 'maven-publish'
    id 'io.codearte.nexus-staging' version '0.30.0'
}

repositories {
    mavenLocal()
    mavenCentral()
}

group 'ru.oleg-cherednik.zip4jvm'
version '1.11'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs += ['-Xlint:unchecked']
}

configurations {
    jar.archiveFileName = "${rootProject.name}-${version}.jar"
}

apply from: "${projectDir}/gradle/checkstyle.gradle"
apply from: "${projectDir}/gradle/pmd.gradle"

dependencies {
    annotationProcessor "org.projectlombok:lombok:${property('lombok.version')}"

    implementation 'org.slf4j:slf4j-api:2.1.0-alpha1'
    implementation 'commons-io:commons-io:2.17.0'
    implementation 'org.apache.commons:commons-lang3:3.17.0'
    implementation 'org.apache.commons:commons-collections4:4.5.0-M2'
    implementation 'commons-codec:commons-codec:1.17.1'
    implementation 'com.github.luben:zstd-jni:1.5.6-6'

    testAnnotationProcessor "org.projectlombok:lombok:${property('lombok.version')}"

    //noinspection VulnerableLibrariesLocal
    testImplementation 'org.testng:testng:7.4.0'
    testImplementation 'org.assertj:assertj-core:3.26.3'
    testImplementation 'org.mockito:mockito-core:4.11.0'
    testImplementation 'org.apache.commons:commons-compress:1.27.1'
    testImplementation 'net.sf.sevenzipjbinding:sevenzipjbinding:16.02-2.01'
    testImplementation 'net.sf.sevenzipjbinding:sevenzipjbinding-all-platforms:16.02-2.01'
    testImplementation 'net.lingala.zip4j:zip4j:2.11.5'
    //noinspection VulnerableLibrariesLocal
    testImplementation 'de.idyl:winzipaes:1.0.1'
    testImplementation 'org.tukaani:xz:1.10'
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

javadoc {
    options.addBooleanOption('Xdoclint:-missing', true)
}

check.finalizedBy(checkLicense)
check.finalizedBy(generateLicenseReport)
check.finalizedBy(jacocoTestReport)

test {
    dependsOn('jar')
    useTestNG()
}

license {
    header rootProject.file('APACHE.txt')
    include '**/*.java'
    newLine false
}

licenseReport {
    configurations = ['compileClasspath', 'runtimeClasspath', 'testCompileClasspath', 'testRuntimeClasspath']
    renderers = [new InventoryHtmlReportRenderer()]
    allowedLicensesFile = new File("$projectDir/misc/license/allowed-licenses.json")
    filters = [new LicenseBundleNormalizer(bundlePath: "$projectDir/misc/license/license-normalizer-bundle.json")]
}

signing {
    sign publishing.publications
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            pom {
                name = rootProject.name

                description = 'Zip files support for JDK application'
                url = 'https://github.com/oleg-cherednik/zip4jvm'
                inceptionYear = '2019'

                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'oleg.cherednik'
                        name = 'Oleg Cherednik'
                        email = 'oleg.cherednik@gmail.com'
                    }
                }

                scm {
                    url = 'https://github.com/oleg-cherednik/zip4jvm'
                    connection = 'scm:https://github.com/oleg-cherednik/zip4jvm.git'
                    developerConnection = 'scm:git@github.com:oleg-cherednik/zip4jvm.git'
                }
            }
        }
    }

    repositories {
        maven {
            name = 'ossrh'
            url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'

            credentials {
                username = findProperty('ossrhToken') as String
                password = findProperty('ossrhTokenPassword') as String
            }
        }
    }
}

nexusStaging {
    serverUrl = 'https://oss.sonatype.org/service/local/'
    packageGroup = 'ru.oleg-cherednik'
    username = findProperty('ossrhToken') as String
    password = findProperty('ossrhTokenPassword') as String
}
